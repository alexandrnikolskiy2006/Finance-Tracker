1. Языки программирования

Язык программирования Python

Python — высокоуровневый, интерпретируемый язык программирования общего назначения.
Особенности:
• Простота и читаемость кода благодаря лаконичному синтаксису.
• Большая стандартная библиотека для работы с файлами, сетями, данными и т. д.
• Огромное количество сторонних библиотек для анализа данных (Pandas, NumPy), машинного обучения (TensorFlow, Scikit-learn), веб-разработки (Django, Flask) и других задач.
• Платформонезависимость — работает на Windows, Linux, macOS.
• Динамическая типизация, что упрощает разработку, но требует аккуратности при работе с типами данных.
• Популярность и активное сообщество, что облегчает обучение и поиск решений.
Применение:
• Анализ данных и машинное обучение.
• Разработка веб-приложений.
• Автоматизация задач и скриптинг.
• Обработка текстов, изображений и видео.
• Финансовые и научные вычисления.
Python идеально подходит для быстрого прототипирования и сложных вычислений.

Язык программирования R
R — язык программирования и среда для статистической обработки данных и их визуализации.
Особенности:
• Разработан специально для статистики и анализа данных.
• Огромное количество пакетов для статистических методов (dplyr, ggplot2, tidyr).
• Мощные инструменты для создания графиков и визуализации данных.
• Открытый исходный код и активное сообщество.
• Хорошо интегрируется с языками Python, C++ и базами данных.
Применение:
• Статистический анализ.
• Машинное обучение и прогнозирование.
• Визуализация больших данных.
• Финансовая аналитика и биоинформатика.
R популярен среди исследователей и аналитиков благодаря его заточенности под анализ и визуализацию.

Язык программирования Java
Java — объектно-ориентированный, универсальный язык программирования с высокой производительностью.
Особенности:
• Платформонезависимость: работает по принципу "Write Once, Run Anywhere" благодаря JVM (Java Virtual Machine).
• Надежность: строгая типизация и управление памятью (сборщик мусора).
• Многопоточность: поддержка параллельных вычислений.
• Широкая экосистема: множество библиотек и фреймворков (Spring, Hibernate).
• Масштабируемость: подходит для создания больших корпоративных систем.
Применение:
• Разработка веб-приложений и серверных систем.
• Создание Android-приложений.
• Финансовые и банковские системы.
• Разработка больших корпоративных приложений.
Java — мощный инструмент для разработки надежных и масштабируемых решений.

Язык программирования C#
C# — объектно-ориентированный язык программирования, разработанный компанией Microsoft как часть платформы .NET.
Особенности:
• Сильная интеграция с .NET: идеально подходит для разработки приложений под Windows и веб-приложений с использованием ASP.NET.
• Современный синтаксис: поддержка асинхронного программирования, лямбда-выражений, LINQ.
• Высокая производительность: эффективная работа с памятью, сборщик мусора.
• Кроссплатформенность: благодаря .NET Core поддерживает Windows, macOS и Linux.
• Инструменты разработки: отличная поддержка в Visual Studio, которая предоставляет мощные средства для отладки и тестирования.
Применение:
• Разработка десктопных и веб-приложений.
• Разработка игр с использованием Unity.
• Создание корпоративных приложений и сервисов.
• Обработка данных и создание финансовых платформ.
C# популярен в разработке на платформе Microsoft и в игровом движке Unity.

Язык программирования JavaScript
JavaScript — динамический язык программирования, в первую очередь предназначенный для создания интерактивных веб-страниц.
Особенности:
• Исполняется в браузере, что делает его основным языком для фронтенд-разработки.
• Асинхронность: поддержка работы с событиями, AJAX-запросами и Promise для обработки асинхронных операций.
• Многофункциональность: используется для веб-разработки (клиентская сторона), серверной разработки (Node.js), мобильных приложений (React Native) и даже для работы с базами данных.
• Широкая экосистема: большое количество библиотек и фреймворков (React, Angular, Vue.js) для разработки интерфейсов и серверных приложений.
• Кроссплатформенность: работает на всех современных браузерах и операционных системах.
Применение:
• Разработка динамичных веб-сайтов и приложений.
• Создание серверных приложений с использованием Node.js.
• Мобильные приложения (с использованием React Native).
• Разработка игр и интерактивных элементов на веб-страницах.
JavaScript — основной инструмент для веб-разработки и создания современных интерактивных приложений.


2. Среды разработки (IDE)
Visual Studio Code (VS Code) — бесплатный, легкий и мощный текстовый редактор с открытым исходным кодом, разработанный Microsoft.
Особенности:
• Поддержка множества языков: JavaScript, Python, C++, Java, PHP, и многих других через расширения.
• Расширяемость: большое количество плагинов для добавления новых функций, таких как дебаггинг, автодополнение, линтинг и интеграция с системами контроля версий (Git).
• Интегрированная терминальная среда: позволяет работать с командной строкой прямо в редакторе.
• Кроссплатформенность: доступен для Windows, macOS и Linux.
• Интуитивно понятный интерфейс: поддержка множества тем и кастомизаций для удобства работы.
Применение:
• Разработка веб-приложений.
• Написание скриптов и программ на разных языках.
• Редактирование и анализ кода в различных средах разработки.
VS Code — один из самых популярных редакторов благодаря своей легкости, настраиваемости и поддержке множества языков и технологий.

PyCharm — интегрированная среда разработки (IDE) для Python, разработанная компанией JetBrains.
Особенности:
• Полная поддержка Python: включает автодополнение, рефакторинг, отладчик и инструменты для тестирования.
• Интеграция с фреймворками: поддержка Django, Flask и других популярных Python-фреймворков для веб-разработки.
• Мощный редактор кода: анализ кода в реальном времени, подсветка синтаксиса и линтинг.
• Встроенный терминал: доступ к командной строке прямо в IDE.
• Интеграция с системами контроля версий: Git, GitHub и другие.
• Поддержка научных вычислений: интеграция с Jupyter Notebooks, поддержка научных библиотек, таких как NumPy и Pandas.
Применение:
• Разработка Python-приложений, включая веб-приложения, научные вычисления и машинное обучение.
• Написание и тестирование кода, работа с большими проектами.
PyCharm — идеальный выбор для профессиональных Python-разработчиков, предлагая мощные инструменты для удобной и эффективной работы.


3. Библиотеки

Для анализа данных:
	Pandas, NumPy: Обработка, хранение и вычисление данных.
Для визуализации:
	Tkinter (Python).
Дополнительные библиотеки:
	PIL: для работы с растровой графикой.
	DateTime: для работы с датой.
	OS: для того, чтобы получить путь к файлу.







4. Базы данных
PostgreSQL — объектно-реляционная система управления базами данных с открытым исходным кодом.
Особенности:
• Поддержка сложных типов данных и запросов.
• Высокая производительность и масштабируемость.
• Надежность, поддержка транзакций (ACID).
• Расширяемость: поддержка пользовательских функций и типов данных.
• Совместимость с SQL-стандартами и другими базами данных.
Применение:
• Хранение и управление структурированными данными.
• Разработка веб-приложений и корпоративных систем.
• Анализ данных и интеграция с другими сервисами.
MySQL — популярная реляционная система управления базами данных с открытым исходным кодом.
Особенности:
• Высокая производительность и масштабируемость.
• Простота установки и настройки.
• Поддержка транзакций и ACID-совместимости.
• Широкая поддержка через документацию и сообщество.
• Хорошо интегрируется с веб-приложениями (например, с PHP).
Применение:
• Разработка веб-приложений.
• Хранение и управление данными в малых и средних проектах.
• Приложения с высокой нагрузкой (например, системы для электронной коммерции).

CSV как источник данных:
CSV-файлы используются как простой формат для хранения и обмена финансовыми данными. Они могут быть обработаны напрямую в приложении:
• Python: с помощью библиотек csv, pandas (включая удобные методы для чтения/записи).
• R: с помощью функций read.csv и write.csv.
• Java: с использованием библиотек вроде Apache Commons CSV.
• JavaScript: через встроенные функции для работы с текстовыми данными или библиотеки, такие как PapaParse.


5. Способы реализации

Десктопное приложение:
Разработка с использованием Python (Tkinter).
Для сохранения данных обо всех финансовых операций используются файлы CSV.


6. Вывод

Для реализации своего проекта мы выбрали язык программирования Python. 

Python - это высокоуровневый язык программирования общего назначения с простой и понятной синтаксической структурой. 

Для визуализации приложения была использована библиотека Tkinter.

Tkinter — стандартная библиотека Python для создания графических пользовательских интерфейсов (GUI).

Для сохранения данных обо всех финансовых операциях мы использовали файлы CSV.

CSV (Comma-Separated Values) — текстовый формат для хранения табличных данных, где каждая строка представляет собой запись, а значения разделены запятыми (или другим разделителем).

В качестве среды разработки мы использовали VS Code.

VS Code — легкий, мощный и бесплатный текстовый редактор с открытым исходным кодом, поддерживающий множество языков программирования.
